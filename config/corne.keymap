#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


// Layers

#define MAC 0
#define MAC_CODE 1
#define UN_NUM 2
#define MAC_FUNC 3
#define WIN 4
#define WIN_CODE 5
#define WIN_NUM 6
#define WIN_FUNC 7

// Behavior Overrides

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
};

/ {
    //combos {
    //  compatible = "zmk,combos";
    //combo_tab {
    //  timeout-ms = <20>;
    //  key-positions = <1 2>;
    //  bindings = <&kp TAB>;
    //};
    //  combo_enter {
    //    timeout-ms = <20>;
    //  key-positions = <13 14>;
    //bindings = <&kp ENTER>;
    //};
    //};

    macros {
        spotlight: spotlight {
            label = "spotlight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>;
        };

        // Emoji

        mac_emoji: mac_emoji {
            label = "mac_emoji";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&kp LGUI>;
        };
        win_emoji: win_emoji {
            label = "win_emoji";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp DOT>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    behaviors {
        td_multi_mac: tap_dance_multi_mac {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MULTI_MAC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp ESC>,
                <&spotlight>,
                <&mac_emoji>;
        };
        td_multi_windows: tap_dance_multi_windows {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MULTI_WINDOWS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp ESC>,
                <&kp LGUI>,
                <&win_emoji>;
        };
        bm: bottom_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "BOTTOM_ROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        cm: code_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "CODE_ROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;

            retro-tap;
        };
        sm: space_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_MOD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&kp LA(F)>;
            key-positions = <14 16>;
            layers = <0>;
        };

        DEnter {
            bindings = <&kp ENTER>;
            key-positions = <37 15>;
            layers = <0>;
        };

        ATab {
            bindings = <&kp TAB>;
            key-positions = <13 37>;
            timeout-ms = <100>;
            layers = <0>;
        };

        new_combo {
            bindings = <&kp ESC>;
            key-positions = <1 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_default_layer {
            bindings = <
&none    &kp Q  &kp W           &kp E         &kp R                 &kp T          &kp Y         &kp U         &kp I         &kp O             &kp P  &none
&none  &lt 1 A  &kp S           &kp D         &kp F                 &kp G          &kp H         &kp J         &kp K         &kp L  &lt 4 APOSTROPHE  &none
&none  &lt 3 Z  &kp X           &kp C         &kp V                 &kp B          &kp N         &kp M     &kp COMMA  &lt 5 PERIOD   &mt RCTRL SLASH  &none
                       &mt LALT ENTER  &mt LGUI ESC  &mt LEFT_SHIFT SPACE  &kp BACKSPACE  &mt RALT DEL  &mt RCMD TAB
            >;
        };

        mac_code_layer {
            bindings = <
&none   &kp EXCL          &kp AT            &kp HASH            &kp DOLLAR            &kp PERCENT  &kp RA(LEFT)   &kp RG(LEFT)  &kp RG(RIGHT)  &kp RA(RIGHT)       &kp PLUS  &none
&none     &trans   &kp AMPERSAND           &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS      &kp LEFT       &kp DOWN         &kp UP      &kp RIGHT       &kp SEMI  &none
&none  &kp CARET  &kp LEFT_BRACE     &kp RIGHT_BRACE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp HOME  &kp PAGE_DOWN    &kp PAGE_UP        &kp END  &kp BACKSLASH  &none
                                  &mt LALT BACKSPACE          &mt LGUI DEL   &mt LEFT_SHIFT SPACE       &kp DEL       &kp RALT        &kp TAB
            >;
        };

        unused_layer {
            bindings = <
&none    &kp Q  &kp W           &kp E          &kp R                 &kp T            &kp Y         &kp U         &kp I         &kp O            &kp P  &none
&none  &lt 1 A  &kp S           &kp D          &kp F                 &kp G            &kp H         &kp J         &kp K         &kp L       &lt 4 SEMI  &none
&none  &lt 3 Z  &kp X           &kp C          &kp V                 &kp B            &kp N         &kp M     &kp COMMA  &lt 5 PERIOD  &mt RCTRL SLASH  &none
                       &mt LALT ENTER  &mt LCTRL ESC  &mt LEFT_SHIFT SPACE  &lt 3 BACKSPACE  &mt RALT DEL  &mt RCMD TAB
            >;
        };

        mac_function_layer {
            bindings = <
&none       &none    &none       &none              &out OUT_USB                   &kp TILDE  &kp KP_N7      &kp KP_N8  &kp KP_N9  &kp MINUS  &none
&none       &none    &kp C_PREV  &kp C_PLAY_PAUSE    &kp C_NEXT             &none      &kp MINUS  &kp KP_N4      &kp KP_N5  &kp KP_N6   &kp PLUS  &none
&none       &none    &kp C_MUTE      &kp C_VOL_DN  &kp C_VOL_UP             &none      &kp SLASH  &kp KP_N1      &kp KP_N2  &kp KP_N3  &kp EQUAL  &none
                                        &kp ENTER  &kp LEFT_GUI  &mt LSHIFT SPACE  &kp BACKSPACE  &kp KP_N0  &td_multi_mac
            >;
        };

        windows_default_layer {
            bindings = <
&none  &kp LS(LA(LC(Q)))  &kp LS(LA(LC(W)))         &kp LS(LA(LC(E)))         &kp LS(LA(LC(R)))         &kp LS(LA(LC(T)))         &kp LS(LA(LC(Y)))         &kp LS(LA(LC(U)))         &kp LS(LA(LC(I)))    &kp LS(LA(LC(O)))      &kp LS(LA(LC(P)))  &none
&none  &kp LS(LA(LC(A)))  &kp LS(LA(LC(S)))         &kp LS(LA(LC(D)))         &kp LS(LA(LC(F)))         &kp LS(LA(LC(G)))         &kp LS(LA(LC(H)))         &kp LS(LA(LC(J)))         &kp LS(LA(LC(K)))    &kp LS(LA(LC(L)))                  &none  &none
&none  &kp LS(LA(LC(Z)))  &kp LS(LA(LC(X)))         &kp LS(LA(LC(C)))         &kp LS(LA(LC(V)))         &kp LS(LC(LA(B)))         &kp LS(LA(LC(N)))         &kp LS(LA(LC(M)))     &kp LS(LA(LC(COMMA)))  &kp LS(LA(LC(DOT)))  &kp LS(LA(LC(SLASH)))  &none
                                             &kp LS(LA(LC(NUMBER_4)))  &kp LS(LA(LC(NUMBER_5)))  &kp LS(LA(LC(NUMBER_6)))  &kp LS(LA(LC(NUMBER_7)))  &kp LS(LA(LC(NUMBER_8)))  &kp LS(LA(LC(NUMBER_9)))
            >;
        };

        windows_code_layer {
            bindings = <
&none   &kp F1   &kp F2    &kp F3        &kp F4     &kp F5          &none  &none  &none  &none  &none  &none
&none   &kp F6   &kp F7    &kp F8        &kp F9    &kp F10          &none  &none  &none  &none  &none  &none
&none  &kp F11  &kp F12   &kp F13       &kp F14    &kp F15          &none  &none  &none  &none  &none  &none
                         &kp LALT  &kp LEFT_GUI  &kp SPACE  &kp BACKSPACE  &none  &none
            >;
        };

        windows_number_layer {
            bindings = <
&none   &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS       &kp ASTERISK  &kp CAPS   &kp BSPC  &none
&none     &kp N1  &kp N2    &kp N3     &kp N4     &kp N5     &kp N6    &kp N7             &kp N8    &kp N9     &kp N0  &none
&none  &kp LSHFT   &none     &none      &none      &mo 7      &none     &none          &kp COMMA   &kp DOT  &kp RSHFT  &none
                          &kp LALT  &kp LCTRL  &kp SPACE      &none     &none  &td_multi_windows
            >;
        };

        windows_function_layer {
            bindings = <
&none  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none   &none              &none   &none    &to 0  &none
&none      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5  &kp 6  &kp F7             &kp F8  &kp F9  &kp F10  &none
&none     &kp F11         &none         &none   &bootloader         &none  &none   &none              &none   &none  &kp F12  &none
                                     &kp LALT     &kp LCTRL     &kp SPACE  &none   &none  &td_multi_windows
            >;
        };
    };
};
